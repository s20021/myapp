{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","value","a_id","text","ntext","artists","isLoaded","count","releases","releases2","number","aid","i","k","URI","this","setState","window","fetch","then","res","json","help","console","log","id","check_cover","cover","image","event","target","Container","maxWidth","onChange","handleUpdate","bind","Button","variant","onClick","fetchMB","getReleas","Object","keys","map","key","color","checkArt","React","Component","Input","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92e26b59.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      value: '',\n      a_id: '',\n      text: '',\n      ntext: 'musicbrainzAPI',\n      artists: {},\n      isLoaded: false,\n      count: 0,\n      releases: [],\n      releases2: [],\n      number: 0,\n      aid: '83abf2d5-a578-41a7-b51d-ca9a44a00545',\n      i: 0,\n      k: 0\n    }\n    this.URI = 'https://musicbrainz.org/ws/2/artist?query='\n  }\n\n  fetchMB () {\n    const { text } = this.state\n    this.setState({ ntext: text })\n    this.setState({ releases: [] })\n    window\n      .fetch(this.URI + text + '&limit=20&offset=0&fmt=json')\n      .then(res => res.json())\n      .then(json => {\n        if (!json.help) {\n          console.log(json)\n          this.setState({\n            artists: json.artists,\n            count: json.count\n          })\n        }\n      })\n  }\n\n  getReleas (id) {\n    window\n      .fetch(\n        'https://musicbrainz.org/ws/2/artist/' + id + '?inc=releases&fmt=json'\n      )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ releases: json.releases })\n      })\n  }\n\n  checkArt (id) {\n    window\n      .fetch('https://musicbrainz.org/ws/2/release/' + id + '?fmt=json')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ check_cover: json['cover-art-archive']['count'] })\n      })\n    return this.state.check_cover\n  }\n\n  getCoverArt (id) {\n    window\n      .fetch('https://coverartarchive.org/release/' + id)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ cover: json.image })\n      })\n  }\n\n  handleUpdate (event) {\n    const text = event.target.value\n    this.setState({ text: text })\n  }\n\n  render () {\n    const { artists, count, releases } = this.state\n    return (\n      <Container maxWidth='sm'>\n        <>\n          <h1>'musicbrainzAPI'</h1>\n          <Input onChange={this.handleUpdate.bind(this)} />\n          <Button\n            variant='outlined'\n            onClick={() => {\n              this.fetchMB()\n            }}\n          >\n            検索\n          </Button>\n        </>\n        <>{count}件</>\n        <h2>'{this.state.ntext}'</h2>\n        <>\n          <Button\n            onClick={() => {\n              this.getReleas(this.state.aid)\n            }}\n          >\n            作品\n          </Button>\n          <ul>\n            {Object.keys(releases).map(key => (\n              <li key={key}>{releases[key]['title']}</li>\n            ))}\n          </ul>\n        </>\n        <>\n          <ol>\n            {Object.keys(artists).map(key => (\n              <li key={key}>\n                {artists[key]['name']}　　{artists[key]['score']}　　\n                {artists[key]['country']}\n                <Button\n                  color='secondary'\n                  onClick={() => {\n                    this.setState({ aid: artists[key]['id'] })\n                  }}\n                >\n                  ＜\n                </Button>\n              </li>\n            ))}\n          </ol>\n          <Button\n            onClick={() => {\n              this.checkArt('63755230-5085-48f4-b1bc-528c7b61b27e')\n            }}\n          ></Button>\n        </>\n        {this.state.check_cover}\n      </Container>\n    )\n  }\n}\n\nconst Input = props => {\n  return <input type='text' onChange={props.onChange} />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}